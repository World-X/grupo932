---
import { Icon } from 'astro-icon/components'
/*
import {
  getIconData,
  iconToSVG,
} from '../../node_modules/.pnpm/astro-icon@1.1.1/node_modules/@iconify/utils'
*/
import MainGridLayout from '../layouts/MainGridLayout.astro'
---
<style lang="scss">
    $table-heading-bg-color: oklch(0.86 0.1 var(--hue));
    $table-heading-color: oklch(0.35 0.1 var(--hue));
    $table-heading-border-color: oklch(0.35 0.15 var(--hue));
    
    $lc-red: 345;
    $tys-lime: 90;
    $pe-purple: 285;
    $ea-green: 135;
    $mdli-cyan: 180;
    $odlc-violet: 255;
    $hu-gray: 0;
    $md-blue: 225;
    
    $no-sat: 0%;
    $base-sat: 15%;
    $hover-sat: 75%;
    $active-sat: 55%;
    
    $base-light: 80%;
    $hover-light: 85%;
    $active-light: 75%;
    
    $lc-background-color: hsl($lc-red, $base-sat, $base-light);
    $tys-background-color: hsl($tys-lime, $base-sat, $base-light);
    $pe-background-color: hsl($pe-purple, $base-sat, $base-light);
    $ea-background-color: hsl($ea-green, $base-sat, $base-light);
    $mdli-background-color: hsl($mdli-cyan, $base-sat, $base-light);
    $odlc-background-color: hsl($odlc-violet, $base-sat, $base-light);
    $hu-background-color: hsl($hu-gray, $no-sat, $base-light);
    $md-background-color: hsl($md-blue, $base-sat, $base-light);

    $button-height: 3rem;
    $button-rowspan-2-height: $button-height * 2;

    // Headings and paragraph
    h1, h2, p {
        display: block;
    }

    h1, h2 {
        font-weight: bold;
    }

    h1 {
        font-size: 2em;
    }

    h2 {
        font-size: 1.5em;
    }

    // Schedule Settings Icon
    #schedule-settings-icon {
        rotate: 0deg;
        transition: rotate 0.5s;
    }

    // Table and cells
    table, tr, td, th {
        border: solid black;
        border-collapse: collapse;
        border-width: 2px;
        text-align: center;
        padding: 8px;
        overflow: hidden;
    }
    
    td, th {
        width: 16.66%;
    }
    
    td {
        margin: 0;
        padding: 0;
    }

    tr {
        height: $button-height;
    }
    
    table {
        width: 100%;
    }
    
    th {
        background-color: $table-heading-bg-color;
        color: $table-heading-color;
        border-color: $table-heading-border-color;
    }
    
    html.dark th {
        background-color: oklch(0.35 0.1 var(--hue));
        color: oklch(0.86 0.1 var(--hue));
    }

    html.dark table, html.dark tr, html.dark td, html.dark th {
        border-color: white;
    }

    // hour
    .hour {
        background-color: lightgray;
    }

    html.dark .hour {
        background-color: dimgray;
    }

    // subjects
    td.lc {
        background-color: $lc-background-color;
    }

    td.tys {
        background-color: $tys-background-color;;
    }

    td.pe {
        background-color: $pe-background-color;
    }

    td.ea {
        background-color: $ea-background-color;
    }

    td.mdli {
        background-color: $mdli-background-color;
    }

    td.odlc {
        background-color: $odlc-background-color;
    }

    td.hu {
        background-color: $hu-background-color;
    }

    td.md {
        background-color: $md-background-color;
    }

    // subject buttons
    td button {
        background-color: hsla($lc-red, $base-sat, $base-light, 0);
        display: block;
        width: 100%;
        height: $button-height;
        text-align: center;
        vertical-align: middle;
        padding: 0;
        margin: 0;
        transition: background-color cubic-bezier(0.165, 0.84, 0.44, 1) 0.3s;
    }

    td button.rowspan-2 {
        height: $button-rowspan-2-height;
    }

    td.lc button:hover {
        background-color: hsl($lc-red, $hover-sat, $hover-light);
    }

    td.lc button:active {
        background-color: hsl($lc-red, $active-sat, $active-light);
    }

    td.tys button:hover {
        background-color: hsl($tys-lime, $hover-sat, $hover-light);
    }

    td.tys button:active {
        background-color: hsl($tys-lime, $active-sat, $active-light);
    }

    td.pe button:hover {
        background-color: hsl($pe-purple, $hover-sat, $hover-light);
    }

    td.pe button:active {
        background-color: hsl($pe-purple, $active-sat, $active-light);
    }

    td.ea button:hover {
        background-color: hsl($ea-green, $hover-sat, $hover-light);
    }

    td.ea button:active {
        background-color: hsl($ea-green, $active-sat, $active-light);
    }

    td.mdli button:hover {
        background-color: hsl($mdli-cyan, $hover-sat, $hover-light);
    }

    td.mdli button:active {
        background-color: hsl($mdli-cyan, $active-sat, $active-light);
    }

    td.odlc button:hover {
        background-color: hsl($odlc-violet, $hover-sat, $hover-light);
    }

    td.odlc button:active {
        background-color: hsl($odlc-violet, $active-sat, $active-light);
    }

    td.hu button:hover {
        background-color: hsl($hu-gray, $no-sat, $hover-light);
    }

    td.hu button:active {
        background-color: hsl($hu-gray, $no-sat, $active-light);
    }

    td.md button:hover {
        background-color: hsl($md-blue, $hover-sat, $hover-light);
    }

    td.md button:active {
        background-color: hsl($md-blue, $active-sat, $active-light);
    }
</style>

<MainGridLayout title="Horario" description="Horario">
    <div class="text-90 flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
        <div class="card-base z-10 px-9 py-6 relative w-full ">
            <!--Markdown class="mt-2">
                <Content />
            </Markdown-->
            <div class="flex w-full">
                <h1>Horario</h1>
                <button aria-label="Settings Menu" name="Schedule Settings Menu" class="btn-plain scale-animation rounded-lg w-11 h-11 active:scale-90" id="schedule-menu-switch" style="margin-left: auto;" onclick="scheduleSwitchButton();" onmouseenter="scheduleMouseEnter();" onmouseleave="scheduleMouseLeave();">
                    <Icon name="material-symbols:settings-rounded" class="text-[1.25rem]" id="schedule-settings-icon" is:inline></Icon>
                </button>
            </div>
            <hr>
            <!-- Este <div> será un panel donde podrás cambiar varias opciones, como seleccionar a que subgrupo perteneces, cuál tema te gustaría usar, entre otras opciones (talvez) -->
            <div id="schedule-settings-panel" style="display: none;">
                <div style="margin-top: 0.5rem;"></div>
                <h2>Configuración</h2>
                <div class="flex w-full">
                    <Icon name="material-symbols:group-rounded" class="text-[1.5rem]" style="margin: auto 8px auto 0;"></Icon>
                    <p style="margin: auto 8px auto 0;"><b>Subgrupo</b>: </p>
                    <button class="flex transition whitespace-nowrap items-center w-full btn-plain scale-animation rounded-lg h-9 px-3 active:scale-95 mb-0.5" style="width: 64px; margin-right: 4px;" id="subgroup-one-button" onclick="setSubGroup(1);">1</button>
                    <button class="flex transition whitespace-nowrap items-center w-full btn-plain scale-animation rounded-lg h-9 px-3 active:scale-95 mb-0.5" style="width: 64px;" id="subgroup-two-button" onclick="setSubGroup(2);">2</button>
                </div>
                <div style="margin-bottom: 0.5rem;"></div>
                <hr>
            </div>
            <br>
            <table class="text-90" id="table-test">
                <tr>
                    <th>Hora</th>
                    <th>Lunes</th>
                    <th>Martes</th>
                    <th>Miércoles</th>
                    <th>Jueves</th>
                    <th>Viernes</th>
                </tr>
                <tr>
                    <td class="hour">13:00 - 14:00</td>
                    <td class="lc" onclick="showSubjectData(0)">
                        <button>LC</button>
                    </td>
                    <td rowspan="2" class="ea">
                        <button class="rowspan-2">EA</button>
                    </td>
                    <td rowspan="2" class="ea">
                        <button class="rowspan-2">EA/LC</button>
                    </td>
                    <td rowspan="2" class="odlc">
                        <button class="rowspan-2">ODLC/PE</button>
                    </td>
                    <td rowspan="2" class="lc">
                        <button class="rowspan-2">LC</button>
                    </td>
                </tr>
                <tr>
                    <td class="hour">14:00 - 15:00</td>
                    <td rowspan="2" class="tys">
                        <button class="rowspan-2">TYS</button>
                    </td>
                </tr>
                <tr>
                    <td class="hour">15:00 - 16:00</td>
                    <td class="mdli">
                        <button>MDLI</button>
                    </td>
                    <td rowspan="2" class="lc">
                        <button class="rowspan-2">LC/EA</button>
                    </td>
                    <td class="tys">
                        <button>TYS</button>
                    </td>
                    <td rowspan="2" class="mdli">
                        <button class="rowspan-2">MDLI</button>
                    </td>
                </tr>
                <tr>
                    <td class="hour">16:00 - 17:00</td>
                    <td rowspan="2" class="pe">
                        <button class="rowspan-2">PE</button>
                    </td>
                    <td rowspan="2" class="pe">
                        <button class="rowspan-2">PE/ODLC</button>
                    </td>
                    <td class="hu">
                        <button>HU</button>
                    </td>
                </tr>
                <tr>
                    <td class="hour">17:00 - 18:00</td>
                    <td rowspan="2" class="odlc">
                        <button class="rowspan-2">ODLC</button>
                    </td>
                    <td rowspan="2" class="md">
                        <button class="rowspan-2">MD</button>
                    </td>
                    <td rowspan="2" class="md">
                        <button class="rowspan-2">MD</button>
                    </td>
                </tr>
                <tr>
                    <td class="hour">18:00 - 19:00</td>
                    <td></td>
                    <td></td>
                </tr>
            </table>
            <br>
            <div class="w-full">
                <hr>
                <br>
                <div class="flex w-full">
                    <h2>Datos de la asignatura</h2>
                    <button aria-label="test" name="test" class="btn-plain scale-animation rounded-lg w-11 h-11 active:scale-90" id="test" style="margin-left: auto;">
                        <Icon name="material-symbols:close-rounded" class="text-[1.25rem]" id="test-icon"></Icon>
                    </button>
                </div>
                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Facilis omnis incidunt ipsam obcaecati doloribus quisquam, molestiae sint sequi quod voluptatum itaque cupiditate exercitationem placeat, earum repudiandae deserunt culpa fuga aut.</p>
                <br>
            </div>
            <hr>
            <br>
            <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ut, mollitia? Enim amet dignissimos error atque qui eveniet consequatur veritatis itaque rem est illum, ullam, culpa consequuntur dolorem cupiditate dolore nihil!</p>
        </div>
    </div>
</MainGridLayout>
<script is:inline>
applySubGroup(localStorage.getItem("subgroup") || 1);

setupHours(window.matchMedia("(max-width: 768px)").matches);

// Call setupHours function when screen is resized
window.addEventListener("resize", function () {
    setupHours(window.matchMedia("(max-width: 768px)").matches);
});

function setupHours(is_screen_medium) {
    // Get all elements with "hour" class, IF screen is medium, set their content to an hour (from 13:00 to 19:00), ELSE set their content to an hour (from 13:00 to 19:00) and a dash followed by the next hour
    let hours = document.getElementsByClassName("hour");
    if (hours) {
        for (let i = 0; i < hours.length; i++) {
            let hour = hours[i];
            if (is_screen_medium) {
                hour.textContent = `${13 + i}:00`;
            } else {
                hour.textContent = `${13 + i}:00 - ${14 + i}:00`;
            }
        }
    }
}

function scheduleSwitchButton() {
    let panel = document.getElementById("schedule-settings-panel");
    let scheduleSettingsIcon = document.getElementById("schedule-settings-icon");
    let settingsSVG = "M10.825 22q-.675 0-1.162-.45t-.588-1.1L8.85 18.8q-.325-.125-.612-.3t-.563-.375l-1.55.65q-.625.275-1.25.05t-.975-.8l-1.175-2.05q-.35-.575-.2-1.225t.675-1.075l1.325-1Q4.5 12.5 4.5 12.337v-.675q0-.162.025-.337l-1.325-1Q2.675 9.9 2.525 9.25t.2-1.225L3.9 5.975q.35-.575.975-.8t1.25.05l1.55.65q.275-.2.575-.375t.6-.3l.225-1.65q.1-.65.588-1.1T10.825 2h2.35q.675 0 1.163.45t.587 1.1l.225 1.65q.325.125.613.3t.562.375l1.55-.65q.625-.275 1.25-.05t.975.8l1.175 2.05q.35.575.2 1.225t-.675 1.075l-1.325 1q.025.175.025.338v.674q0 .163-.05.338l1.325 1q.525.425.675 1.075t-.2 1.225l-1.2 2.05q-.35.575-.975.8t-1.25-.05l-1.5-.65q-.275.2-.575.375t-.6.3l-.225 1.65q-.1.65-.587 1.1t-1.163.45zm1.225-6.5q1.45 0 2.475-1.025T15.55 12t-1.025-2.475T12.05 8.5q-1.475 0-2.488 1.025T8.55 12t1.013 2.475T12.05 15.5";
    let closeSVG = "m12 13.4l-4.9 4.9q-.275.275-.7.275t-.7-.275t-.275-.7t.275-.7l4.9-4.9l-4.9-4.9q-.275-.275-.275-.7t.275-.7t.7-.275t.7.275l4.9 4.9l4.9-4.9q.275-.275.7-.275t.7.275t.275.7t-.275.7L13.4 12l4.9 4.9q.275.275.275.7t-.275.7t-.7.275t-.7-.275z";
    if (panel) {
        if (panel.style.display === "none") {
            panel.style.display = "block";
            scheduleSettingsIcon.getElementsByTagName("path")[0].setAttribute("d", closeSVG);
        } else {
            panel.style.display = "none";
            scheduleSettingsIcon.getElementsByTagName("path")[0].setAttribute("d", settingsSVG);
        }
    }
}

function scheduleMouseEnter() {
    let icon = document.getElementById("schedule-settings-icon");
    if (icon) {
        icon.style.rotate = "90deg";
    }
}

function scheduleMouseLeave() {
    let icon = document.getElementById("schedule-settings-icon");
    if (icon) {
        icon.style.rotate = "0deg";
    }
}

function setSubGroup(subgroup) {
    localStorage.setItem("subgroup", subgroup);
    applySubGroup(subgroup);
}

function applySubGroup(subgroup) {
    let buttonOne = document.getElementById("subgroup-one-button");
    let buttonTwo = document.getElementById("subgroup-two-button");
    if (buttonOne && buttonTwo) {
        if (subgroup == 1) {
            buttonOne.classList.add("current-theme-btn");
            buttonTwo.classList.remove("current-theme-btn");
        } else {
            buttonOne.classList.remove("current-theme-btn");
            buttonTwo.classList.add("current-theme-btn");
        }
    }
}

function showSubjectData(subject) {
    console.log(`Debug: Showing data for ${subject}!`);
}

/*
function loadButtonScript() {
    console.log("Debug: Loading button script!")
    let menuBtn = document.getElementById("schedule-menu-switch");
    if (menuBtn) {
        menuBtn.addEventListener("click", function () {
            return;
        });
    }
}


loadButtonScript();

document.addEventListener('astro:after-swap', loadButtonScript, { once: false });
*/
</script>
